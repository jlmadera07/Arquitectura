package Proyecto_Arquitectura.Arquitectura_Web.Controlador;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import Proyecto_Arquitectura.Arquitectura_Web.Modelo.Producto;
import Proyecto_Arquitectura.Arquitectura_Web.Servicios.ProductoImpl;


@RestController
@RequestMapping("/api")
public class ProductoControlador {
	
	@Autowired
	ProductoImpl productoImpl;
	
	@GetMapping("/productos")
	public List<Producto> listProductos(){
		return productoImpl.listarProductos();
	}
	
	@PostMapping("/productos")
	public Producto guardarProducto(@RequestBody Producto producto)
	{
	return productoImpl.guardeProducto(producto);	
	}
	
	@PutMapping("/productos/{id}")
	public Producto actualizaProducto(@PathVariable(name="id") Long id, @RequestBody Producto producto)
	{
		Producto producto_seleccionado = new Producto();
		Producto producto_actualizado = new Producto();
		
		producto_seleccionado= productoImpl.buscarXid(id);
		
		producto_seleccionado.setNombre (producto.getNombre());
		producto_seleccionado.setMarca(producto.getMarca());
		producto_seleccionado.setDescripcion(producto.getDescripcion());
		producto_seleccionado.setImagen(producto.getImagen());
		producto_seleccionado.setUnidades(producto.getUnidades());
		
		producto_actualizado = productoImpl.actualizarProducto(producto_actualizado);
		System.out.println("El cliente actualizado es: " + producto_actualizado);
		
		return producto_actualizado;
	}
	
	@DeleteMapping("/productos/{id}")
	public void eliminarClinte(@PathVariable(name="id")Long id)
	{
		productoImpl.eliminarProducto();
	}


	
}
